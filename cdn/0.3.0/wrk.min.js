if(window.wrk!==undefined){console.error('Warning: an instance of wrk.js is already running')}
else{var wrk={};window.wrk=wrk;Object.getOwnPropertyNames(Math).forEach(key=>{wrk[key]=Math[key];});wrk._180DIVPI=180/wrk.PI;}
wrk.uniqueId=function(){return'_'+wrk.random().toString(36).substr(2,9);}
wrk.randBoolean=function(){return wrk.random()>0.5;}
wrk.doNothing=function(){}
wrk.constrain=function(num,min,max){return Math.max(min,Math.min(num,max))}
wrk.wrapAround=function(num,min,max){var diff=max-min;if(num>max)num=num%diff+min;if(num<min)num=max;return num;}
wrk.doNTimes=function(n,func){for(var i=0;i<n;i++){func(i);}}
wrk.str={};wrk.str.lowerAlphabet=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];wrk.str.upperAlphabet=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];wrk.str.digits=['0','1','2','3','4','5','6','7','8','9'];wrk.str.symbols=['~','`','!','@','#','$','%','^','&','*','(',')','-','_','=','+','[','{',']','}','\\','|',';',':','\'','"',',','<','.','>','/','?'];wrk.str.randomFromArray=function(length=1,charsToUse=[]){var result='';for(var i=0;i<length;i++){result+=wrk.arr.choose(charsToUse);}
return result;}
wrk.str.random=function(length=1,lowercaseAllowed=true,uppercaseAllowed=true,digitsAllowed=true,symbolsAllowed=true){var charsToUse=[];if(lowercaseAllowed)charsToUse=charsToUse.concat(wrk.str.lowerAlphabet);if(uppercaseAllowed)charsToUse=charsToUse.concat(wrk.str.upperAlphabet);if(digitsAllowed)charsToUse=charsToUse.concat(wrk.str.digits);if(symbolsAllowed)charsToUse=charsToUse.concat(wrk.str.symbols);return wrk.str.randomFromArray(length,charsToUse);}
wrk.str.randomLetters=function(length=1,lowercaseAllowed=true,uppercaseAllowed=true){var charsToUse=[];if(lowercaseAllowed)charsToUse=charsToUse.concat(wrk.str.lowerAlphabet);if(uppercaseAllowed)charsToUse=charsToUse.concat(wrk.str.upperAlphabet);return wrk.str.randomFromArray(length,charsToUse);}
wrk.str.randomSymbols=function(length=1,digitsAllowed=false){var charsToUse=[];if(digitsAllowed)charsToUse=charsToUse.concat(wrk.str.digits);return wrk.str.randomFromArray(length,charsToUse);}
wrk.str.randomDigits=function(length=1){return wrk.str.randomFromArray(length,wrk.str.digits);}
wrk.str.breakHtmlTags=function(str){return str.replace(/</g,'<\u200c');}
wrk.round=function(num,decimalPlaces=0){var numToRound=num*10**decimalPlaces;return Math.round(numToRound)/10**decimalPlaces;}
wrk.floor=function(num,decimalPlaces=0){var numToRound=num*10**decimalPlaces;return Math.floor(numToRound)/10**decimalPlaces;}
wrk.ceiling=function(num,decimalPlaces=0){var numToRound=num*10**decimalPlaces;return Math.ceil(numToRound)/10**decimalPlaces;}
wrk.randflt=function(min,max){var diff=max-min;return Math.random()*diff+min;}
wrk.randint=function(min,max){return Math.floor(wrk.randflt(min,max));}
wrk.sigmoid=function(x){return 1/(1+Math.exp(-x));}
wrk.invSigmoid=function(x){return wrk.sigmoid(x)*(1-wrk.sigmoid(x));}
wrk.degrees=function(radians){return radians*wrk._180DIVPI;}
wrk.radians=function(degrees){return degrees/wrk._180DIVPI;}
wrk.mean=function(a,b){return(a+b)/2;}
wrk.dom={};wrk.dom.logPara=undefined;wrk.dom.id=function(id){return document.getElementById(id);}
wrk.dom.viewportWidth=function(){return Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);}
wrk.dom.viewportHeight=function(){return Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);}
wrk.dom.viewportSize=function(){return wrk.v(wrk.dom.viewportWidth,wrk.dom.viewportHeight);}
wrk.dom.clearLogPara=function(){if(wrk.dom.logPara!==undefined){wrk.dom.logPara.innerText='';}}
wrk.dom.logToPara=function(data,label='No label'){if(wrk.dom.logPara===undefined){wrk.dom.logPara=document.createElement('p');document.body.appendChild(wrk.dom.logPara);}
else{wrk.dom.logPara.innerText+=`${label} : ${data}\n`;}}
wrk.arr={};wrk.arr.highestIndex=function(array=[]){var highestIdx=null;var highestItem=0;array.forEach((item,i)=>{if(item>=highestItem){highestItem=item;highestIdx=i;}});return highestIdx;}
wrk.arr.lowestIndex=function(array=[]){var lowestIdx=null;var lowestItem=0;array.forEach((item,i)=>{if(item<=lowestItem){lowestItem=item;lowestIdx=i;}});return lowestIdx;}
wrk.arr.choose=function(array=[]){return array[wrk.randint(0,array.length)];}
wrk.arr.sum=function(array=[]){var sum=array.reduce(function(a,b){return a+b;},0);return sum;}
wrk.arr.product=function(array=[]){var product=array.reduce(function(a,b){return a*b;},1);return product;}
wrk.arr.mean=function(array=[]){var sum=wrk.arr.sum(array);var mean=sum/array.length;return mean;}
wrk.arr.median=function(array=[]){if(array.length%2==0){var justBelowMiddle=array[array.length/2-1];var justOverMiddle=array[array.length/2];return wrk.mean(justBelowMiddle,justOverMiddle);}
else{var middleIndex=array.length/2-0.5;return array[middleIndex];}}
wrk.arr.mode=function(){};wrk.obj={};wrk.obj.setValues=function(obj,values){var keys=Object.keys(obj);keys.forEach((key,i)=>{obj[key]=values[i];});}
wrk.v=function(x,y,z=0){return{x:x,y:y,z:z};}
wrk.v.random=function(min,max,floatsAllowed=true){if(floatsAllowed){return new wrk.v(wrk.randflt(min.x,max.x),wrk.randflt(min.y,max.y),wrk.randflt(min.z,max.z));}
else{return new wrk.v(wrk.randint(min.x,max.x),wrk.randint(min.y,max.y),wrk.randint(min.z,max.z));}}
wrk.v.copy=function(v){return wrk.v(v.x,v.y,v.z);}
wrk.v.equal=function(v1,v2){return(v1.x==v2.x&&v1.y==v2.y&&v1.z==v1.z);}
wrk.v.add=function(v1,v2){v1.x+=v2.x;v1.y+=v2.y;v1.z+=v2.z;}
wrk.v.copyAdd=function(v1,v2){var v3=wrk.v.copy(v1);wrk.v.add(v3,v2);return v3;}
wrk.v.sub=function(v1,v2){v1.x-=v2.x;v1.y-=v2.y;v1.z-=v2.z;}
wrk.v.copySub=function(v1,v2){var v3=wrk.v.copy(v1);wrk.v.sub(v3,v2);return v3;}
wrk.v.mult=function(v,amount){v.x*=amount;v.y*=amount;v.z*=amount;}
wrk.v.copyMult=function(v,amount){var v2=wrk.v.copy(v);wrk.v.mult(v2,amount);return v2;}
wrk.v.div=function(v,amount){v.x/=amount;v.y/=amount;v.z/=amount;}
wrk.v.copyDiv=function(v,amount){var v2=wrk.v.copy(v);wrk.v.div(v2,amount);return v2;}
wrk.v.magSq=function(v){return v.x**2+v.y**2+v.z**2;}
wrk.v.mag=function(v){return wrk.sqrt(wrk.v.magSq(v));}
wrk.v.distSq=function(v1,v2){var v3=wrk.v.copySub(v2,v1);return wrk.v.magSq(v3);}
wrk.v.dist=function(v1,v2){return wrk.sqrt(wrk.v.distSq(v1,v2));}
wrk.v.mean=function(v1,v2){var dist=wrk.v.dist(v1,v2);return wrk.v.copyAdd(v1,dist);}
wrk.v.normalize=function(v){var mag=wrk.v.mag(v);wrk.v.div(v,mag);}
wrk.v.rotate=function(v,angle=0,useDegrees=false){if(useDegrees){angle=wrk.radians(angle);}
angle*=-1;var cos=wrk.cos(angle);var sin=wrk.sin(angle);var newX=v.x*cos-v.y*sin;v.y=v.x*sin+v.y*cos;v.x=newX;}
wrk.v.heading=function(v,useDegrees=false){var heading=wrk.atan2(v.x,v.y);if(useDegrees)heading=wrk.degrees(heading);return heading;}
wrk.v.dot=function(v1,v2){var result=v1.x*v2.x;result+=v1.y*v2.y;result+=v1.z*v2.z;return result;}
wrk.v.cross=function(v1,v2){var crossP=wrk.v(0,0,0);crossP.x=v1.y*v2.z-v1.z*v2.y;crossP.y=v1.z*v2.x-v1.x*v2.z;crossP.z=v1.x*v2.y-v1.y*v2.x;return crossP;}
wrk.attitude=function(heading,pitch,roll){return{heading:heading,pitch:pitch,roll:roll};}
wrk.attitude.copy=function(a){return wrk.attitude(a.heading,a.pitch,a.roll);}
wrk.attitude.add=function(a1,a2){a1.heading+=a2.heading;a1.pitch+=a2.pitch;a1.roll+=a2.roll;}
wrk.attitude.copyAdd=function(a1,a2){var a3=wrk.attitude.copy(a1);wrk.attitude.add(a3,a2);return a3;}
wrk.attitude.sub=function(a1,a2){a1.heading-=a2.heading;a1.pitch-=a2.pitch;a1.roll-=a2.roll;}
wrk.attitude.copySub=function(a1,a2){var a3=wrk.attitude.copy(a1);wrk.attitude.sub(a3,a2);return a3;}
wrk.attitude.mult=function(a,amount){a.heading*=amount;a.pitch*=amount;a.roll*=amount;}
wrk.attitude.copyMult=function(a,amount){var a2=wrk.attitude.copy(a);wrk.attitude.mult(a2,amount);return a2;}
wrk.attitude.div=function(a,amount){a.heading/=amount;a.pitch/=amount;a.roll/=amount;}
wrk.attitude.copyDiv=function(a,amount){var a2=wrk.attitude.copy(a);wrk.attitude.div(a2,amount);return a2;}
wrk.NeuralNetwork=class{constructor(){this.inputs=[];this.hiddenLayers=[];this.outputs=[];}
createInputLayer(size){this.inputs=[];for(var i=0;i<size;i++){this.inputs.push(new wrk.Neuron());}}
addHiddenLayer(size){var newLayer=[];for(var i=0;i<size;i++){newLayer.push(new wrk.Neuron());}
this.hiddenLayers.push(newLayer);}
createOutputLayer(size){this.outputs=[];for(var i=0;i<size;i++){this.outputs.push(new wrk.Neuron());}}
connect(){this._connect2Layers(this.inputs,this.hiddenLayers[0]);this._connect2Layers(this.hiddenLayers[this.hiddenLayers.length-1],this.outputs);for(var i=0;i<this.hiddenLayers.length-1;i++){var firstLayer=this.hiddenLayers[i];var secondLayer=this.hiddenLayers[i+1];this._connect2Layers(firstLayer,secondLayer);}}
activate(input){this.inputs.forEach((neuron,i)=>neuron.activate(input[i]));this.hiddenLayers.forEach(layer=>{layer.forEach(neuron=>neuron.activate());});return this.outputs.map(neuron=>neuron.activate());}
train(dataset,iterations=1){while(iterations>0){dataset.forEach(datum=>{this.activate(datum.inputs);this.propagate(datum.outputs);});iterations--;}}
propagate(target){this.outputs.forEach((neuron,i)=>neuron.propagate(target[i]));for(var i=this.hiddenLayers.length-1;i>=0;i--){var layer=this.hiddenLayers[i];layer.forEach(neuron=>neuron.propagate());}
return this.inputs.forEach(neuron=>neuron.propagate());}
saveTraining(){var savedTraining=[];savedTraining.push(this._saveLayer(this.inputs));this.hiddenLayers.forEach(layer=>{savedTraining.push(this._saveLayer(layer));});savedTraining.push(this._saveLayer(this.outputs));return savedTraining;}
loadTraining(savedTraining){this._loadLayer(savedTraining[0],this.inputs);this.hiddenLayers.forEach((layer,i)=>{this._loadLayer(savedTraining[i+1],layer);});this._loadLayer(savedTraining[this.hiddenLayers.length+1],this.outputs);}
_saveLayer(layer){var savedLayer=[];layer.forEach(neuron=>{var savedNeuron=[];savedNeuron.push(neuron.bias);var incomingWeights=Object.values(neuron.incoming.weights);savedNeuron.push(incomingWeights);var outgoingWeights=Object.values(neuron.outgoing.weights);savedNeuron.push(outgoingWeights);savedLayer.push(savedNeuron);});return savedLayer;}
_loadLayer(savedLayer,neuronObjs){for(var i=0;i<neuronObjs.length;i++){var neuron=neuronObjs[i];var values=savedLayer[i];neuron.bias=values.shift();setValues(neuron.incoming.weights,values[0]);setValues(neuron.outgoing.weights,values[1]);}}
_connect2Layers(layer1,layer2){layer1.forEach(neuron=>{layer2.forEach(neuron2=>{neuron.connect(neuron2);});});}}
wrk.Neuron=class{constructor(bias=wrk.randflt(-1,1)){this.id=wrk.uniqueId();this.bias=bias;this.incoming={weights:{},targets:{}}
this.outgoing={weights:{},targets:{}}
this._output;this.output;this.error;}
connect(neuron,weight=wrk.randflt(0,1)){this.outgoing.targets[neuron.id]=neuron;neuron.incoming.targets[this.id]=this;neuron.incoming.weights[this.id]=weight;if(neuron.incoming.weights[this.id]==undefined){this.outgoing.weights[neuron.id]=wrk.randflt(-1,1);}
else{this.outgoing.weights[neuron.id]=weight;}}
activate(input){if(input!=undefined){this._output=1;this.output=input;}
else{var targetIds=Object.keys(this.incoming.targets);var sum=targetIds.reduce((total,target)=>{return total+=this.incoming.targets[target].output*this.incoming.weights[target];},this.bias);this._output=wrk.invSigmoid(sum);this.output=wrk.sigmoid(sum);}
return this.output;}
propagate(target,rate=0.3){var outgoingIds=Object.keys(this.outgoing.targets);if(target==undefined){var sum=outgoingIds.reduce((total,target,index)=>{var targetObj=this.outgoing.targets[target];this.outgoing.weights[target]-=rate*targetObj.error*this.output;this.outgoing.targets[target].incoming.weights[this.id]=this.outgoing.weights[target];total+=targetObj.error*this.outgoing.weights[target];return total;},0);}
else{var sum=this.output-target;}
this.error=sum*this._output
this.bias-=rate*this.error;return this.error;}}